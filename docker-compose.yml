services:
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - chirpy-network

  sqlc:
    container_name: sqlc
    build:
      context: .
      dockerfile: Dockerfile.goose
    command: sqlc generate
    volumes:
      - ./sql:/app/sql
      - ./sqlc.yaml:/app/sqlc.yaml
      - .:/app/src
    networks:
      - chirpy-network

  goose:
    container_name: goose
    build:
      context: .
      dockerfile: Dockerfile.goose
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_URL: ${DB_URL}
    command: sh /app/scripts/goose-start.sh
    volumes:
      - ./sql:/app/sql
      - ./sqlc.yaml:/app/sqlc.yaml
      - ./scripts:/app/scripts
    networks:
      - chirpy-network
    depends_on:
      db:
        condition: service_healthy

  chirpy-app:
    container_name: chirpy-app
    build:
      context: .
      dockerfile: Dockerfile.app
    volumes:
      - ./sql:/app/sql
      - ./sqlc.yaml:/app/sqlc.yaml
      - ./scripts:/app/scripts
    ports:
      - "8080:8080"
    environment:
      DB_URL: ${DB_URL}
      PLATFORM: ${PLATFORM}
    networks:
      - chirpy-network
    depends_on:
      goose:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    command: sh -c "/app/chirpy"

volumes:
  db_data:

networks:
  chirpy-network:
    driver: bridge
